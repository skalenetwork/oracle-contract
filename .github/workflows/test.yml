name: Build and test
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        python-version: ["3.7.x", "3.8.x", "3.9.x"]

    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    steps:
    - uses: actions/checkout@v2

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install NODE JS
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install project
      run: yarn install

    - name: Install slither
      run: pip3 install -r scripts/requirements.txt

    - name: Show slither version
      run: slither --version

    - name: Lint
      run: yarn fullcheck

    # - name: Test deploy
    #   run: ./scripts/test_deploy.sh

    - name: Run tests
      run: npx hardhat coverage

    - name: Install python building tools
      run: pip3 install -r predeployed/scripts/requirements.txt

    - name: Install python testing staff
      run: pip3 install -r predeployed/test/requirements.txt

    - name: Install geth
      run: |
        sudo add-apt-repository -y ppa:ethereum/ethereum
        sudo apt install ethereum

    - name: Check types
      run: mypy predeployed/src

    - name: Lint python
      run: pylint predeployed/src/oracle_predeployed/

    - name: Build pip package
      env:
        VERSION: "0.0.0"
      run: predeployed/scripts/build_package.sh

    - name: Run tests of predeployed part
      env:
        PYTHONPATH: predeployed/src
      run: |
        pytest --cov=oracle_predeployed
        coverage xml -i

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
